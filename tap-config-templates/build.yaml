#@ load("@ytt:data","data")
#@ load("@ytt:base64","base64")
---
profile: build
ceip_policy_disclosed: true
buildservice:
  kp_default_repository: #@ "{}/{}/build-service".format(data.values.harbor.fqdn, data.values.harbor.system_project)
  kp_default_repository_username: #@ data.values.harbor.user
  kp_default_repository_password: #@ data.values.harbor.password
  exclude_dependencies: true
supply_chain: testing_scanning

shared:
  ca_cert_data: #@ base64.decode(data.values.tls.certData)

scanning:
  metadataStore:
    url: ""

ootb_supply_chain_testing_scanning:
  registry:
    server: #@ data.values.harbor.fqdn
    repository: #@ data.values.harbor.system_project
  gitops:
    #@ if data.values.gitops.enabled:
    server_address: https://github.com/
    repository_owner: #@ data.values.gitops.repository_owner
    repository_name: #@ data.values.gitops.repository_name
    branch: #@ data.values.gitops.branch
    commit_strategy: pull_request
    pull_request:
      server_kind: github
      commit_branch: ""
      pull_request_title: ready for review
      pull_request_body: generated by supply chain
    ssh_secret: "git-auth"
    #@ else:
    ssh_secret: ""
    #@ end
  #@ if data.values.maven.enabled:
  maven:
    repository:
      url: #@ data.values.maven.repository_url
      secret_name: maven-auth
  #@ end

grype:
  targetImagePullSecret: "tap-registry"
  metadataStore:
    url: #@ "https://metadata-store.{}".format(data.values.clusters.view_cluster.ingressDomain)
    caSecret:
      name: store-ca-cert
      importFromNamespace: metadata-store-secrets
    authSecret:
      name: store-auth-token
      importFromNamespace: metadata-store-secrets

package_overlays:
- name: ootb-templates
  secrets:
  - name: pr-flow-overlay